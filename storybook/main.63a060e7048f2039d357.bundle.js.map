{"version":3,"file":"main.63a060e7048f2039d357.bundle.js","sources":["webpack:///./packages/core/src/theme.js"],"sourcesContent":["const createMediaQuery = n => `@media screen and (min-width:${n})`\n\nconst addAliases = (arr, aliases) =>\n  aliases.forEach((key, i) =>\n    Object.defineProperty(arr, key, {\n      enumerable: false,\n      get() {\n        return this[i]\n      }\n    })\n  )\n\nexport const breakpoints = [32, 40, 48, 64].map(n => n + 'em')\n\nexport const mediaQueries = breakpoints.map(createMediaQuery)\n\nconst aliases = ['sm', 'md', 'lg', 'xl']\n\naddAliases(breakpoints, aliases)\naddAliases(mediaQueries, aliases)\n\nexport const space = [0, 4, 8, 16, 32, 64, 128]\n\nexport const font = `'Montserrat','Helvetica Neue',Helvetica,Arial,sans-serif`\n\nexport const fontSizes = [12, 14, 16, 20, 24, 32, 40, 56, 72]\n\nexport const medium = 500\nexport const bold = 700\n// alias\nexport const regular = medium\n\n// styled-system's `fontWeight` function can hook into the `fontWeights` object\nexport const fontWeights = {\n  medium,\n  bold,\n  // alias\n  regular\n}\n\nexport const lineHeights = {\n  standard: 1.5,\n  display: 1.25\n}\n\nconst letterSpacings = {\n  normal: 'normal',\n  caps: '0.025em'\n}\n\nexport const textStyles = {\n  display8: {\n    fontSize: fontSizes[8] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display7: {\n    fontSize: fontSizes[7] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display6: {\n    fontSize: fontSizes[6] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display5: {\n    fontSize: fontSizes[5] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display4: {\n    fontSize: fontSizes[4] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display3: {\n    fontSize: fontSizes[3] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display2: {\n    fontSize: fontSizes[2] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display1: {\n    fontSize: fontSizes[1] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display\n  },\n  display0: {\n    fontSize: fontSizes[0] + 'px',\n    fontWeight: fontWeights.bold,\n    lineHeight: lineHeights.display,\n    letterSpacing: letterSpacings.caps,\n    textTransform: 'uppercase'\n  },\n  body2: {\n    fontSize: fontSizes[2] + 'px',\n    fontWeight: fontWeights.medium,\n    lineHeight: lineHeights.standard\n  },\n  body1: {\n    fontSize: fontSizes[1] + 'px',\n    fontWeight: fontWeights.medium,\n    lineHeight: lineHeights.standard\n  },\n  body0: {\n    fontSize: fontSizes[0] + 'px',\n    fontWeight: fontWeights.medium,\n    lineHeight: lineHeights.standard\n  }\n}\n\n// color palette\nconst black = '#000'\nconst white = '#fff'\nconst text = '#001833'\nconst lightBlue = '#e8f2ff'\nconst blue = '#007aff'\nconst darkBlue = '#049'\nconst lightGray = '#f4f6f8'\nconst borderGray = '#c0cad5'\nconst gray = '#4f6f8f'\nconst darkGray = '#364049'\nconst lightGreen = '#ecf7ec'\nconst green = '#0a0'\nconst darkGreen = '#060'\nconst lightRed = '#fbebeb'\nconst red = '#c00'\nconst darkRed = '#800'\nconst orange = '#f68013'\nconst darkOrange = '#f06f20'\nconst lightPurple = '#f5ebfa'\nconst purple = '#70b'\nconst yellow = '#fedc2a'\nconst lightYellow = '#fff3c0'\n\n// deprecated aliases\nconst darkPurple = purple\nconst lightOrange = orange\n\nconst colors = {\n  black,\n  white,\n  text,\n  blue,\n  lightBlue,\n  darkBlue,\n  gray,\n  lightGray,\n  borderGray,\n  darkGray,\n  green,\n  lightGreen,\n  darkGreen,\n  red,\n  lightRed,\n  darkRed,\n  orange,\n  darkOrange,\n  purple,\n  lightPurple,\n  yellow,\n  lightYellow,\n\n  // deprecated\n  lightOrange,\n  darkPurple\n}\n\nexport { colors }\n\nexport const colorStyles = {\n  whiteOnText: {\n    color: colors.white,\n    backgroundColor: colors.text\n  },\n  whiteOnGray: {\n    color: colors.white,\n    backgroundColor: colors.gray\n  },\n  textOnLightGray: {\n    color: colors.text,\n    backgroundColor: colors.lightGray\n  },\n  whiteOnBlue: {\n    color: colors.white,\n    backgroundColor: colors.blue\n  },\n  blueOnLightBlue: {\n    color: colors.blue,\n    backgroundColor: colors.lightBlue\n  },\n  whiteOnGreen: {\n    color: colors.white,\n    backgroundColor: colors.green\n  },\n  greenOnLightGreen: {\n    color: colors.green,\n    backgroundColor: colors.lightGreen\n  },\n  whiteOnRed: {\n    color: colors.white,\n    backgroundColor: colors.red\n  },\n  redOnLightRed: {\n    color: colors.red,\n    backgroundColor: colors.lightRed\n  },\n  textOnOrange: {\n    color: colors.text,\n    backgroundColor: colors.orange\n  },\n  whiteOnPurple: {\n    color: colors.white,\n    backgroundColor: colors.purple\n  },\n  purpleOnLightPurple: {\n    color: colors.purple,\n    backgroundColor: colors.lightPurple\n  },\n  textOnWhite: {\n    color: colors.text,\n    backgroundColor: colors.white\n  },\n  grayOnWhite: {\n    color: colors.gray,\n    backgroundColor: colors.white\n  },\n  blueOnWhite: {\n    color: colors.blue,\n    backgroundColor: colors.white\n  },\n  greenOnWhite: {\n    color: colors.green,\n    backgroundColor: colors.white\n  },\n  redOnWhite: {\n    color: colors.red,\n    backgroundColor: colors.white\n  },\n  purpleOnWhite: {\n    color: colors.purple,\n    backgroundColor: colors.white\n  },\n  whiteOnDarkOrange: {\n    color: colors.white,\n    backgroundColor: colors.darkOrange\n  }\n}\n\ncolorStyles.info = colorStyles.textOnLightGray\ncolorStyles.success = colorStyles.whiteOnGreen\ncolorStyles.warning = colorStyles.textOnOrange\ncolorStyles.danger = colorStyles.whiteOnRed\n\n// styled-system's `borderRadius` function can hook into the `radii` object/array\nexport const radii = [0, 2, 6]\nexport const radius = '2px'\n\nexport const maxContainerWidth = '1280px'\n\n// boxShadows\nexport const boxShadows = [\n  `0 0 2px 0 rgba(0,0,0,.08),0 1px 4px 0 rgba(0,0,0,.16)`,\n  `0 0 2px 0 rgba(0,0,0,.08),0 2px 8px 0 rgba(0,0,0,.16)`,\n  `0 0 2px 0 rgba(0,0,0,.08),0 4px 16px 0 rgba(0,0,0,.16)`,\n  `0 0 2px 0 rgba(0,0,0,.08),0 8px 32px 0 rgba(0,0,0,.16)`\n]\n\n// animation duration\nexport const duration = {\n  fast: `150ms`,\n  normal: `300ms`,\n  slow: `450ms`,\n  slowest: `600ms`\n}\n\n// animation easing curves\nconst easeInOut = 'cubic-bezier(0.5, 0, 0.25, 1)'\nconst easeOut = 'cubic-bezier(0, 0, 0.25, 1)'\nconst easeIn = 'cubic-bezier(0.5, 0, 1, 1)'\n\nconst timingFunctions = {\n  easeInOut,\n  easeOut,\n  easeIn\n}\n\n// animation delay\nconst transitionDelays = {\n  small: `60ms`,\n  medium: `160ms`,\n  large: `260ms`,\n  xLarge: `360ms`\n}\n\nconst theme = {\n  breakpoints,\n  mediaQueries,\n  space,\n  font,\n  fontSizes,\n  fontWeights,\n  lineHeights,\n  letterSpacings,\n  regular,\n  bold,\n  textStyles,\n  colors,\n  colorStyles,\n  radii,\n  radius,\n  boxShadows,\n  maxContainerWidth,\n  duration,\n  timingFunctions,\n  transitionDelays\n}\n\nexport default theme\n"],"mappings":"AAEA","sourceRoot":""}